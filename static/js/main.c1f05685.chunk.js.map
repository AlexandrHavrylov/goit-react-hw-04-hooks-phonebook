{"version":3,"sources":["styles/Form.styled.jsx","components/Form/Form.jsx","styles/Contacts.styled.jsx","components/Contacts/Contacts.jsx","styles/App.styled.jsx","components/Filter/Filter.jsx","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","Label","label","Input","input","Button","button","Form","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","preventDefault","type","pattern","title","required","onChange","ContactsList","ul","Contact","li","ContactInfo","span","DeleteBtn","Contacts","contacts","onDeleteContact","map","id","onClick","MainContainer","div","Title","h1","Section","Filter","onFilterChange","App","setContacts","filter","setFilter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","filterContacts","normalizedFilterValue","toLowerCase","trim","contact","includes","getFilterContacts","uuidv4","find","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1f05685.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const StyledForm = styled.form`\r\n  width: 600px;\r\n  padding: 16px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  border: 1px black solid;\r\n  border-radius: 5px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  box-shadow: rgb(25 26 27 / 20%) 4px 4px 8px 0px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  font-size: 16px;\r\n  width: 300px;\r\n  padding: 4px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  border: 0.5px black solid;\r\n  &:hover {\r\n    background-color: #8ecafc;\r\n  }\r\n`;\r\n","import { Label, Button, Input, StyledForm } from \"styles/Form.styled\";\r\n\r\nimport { PropTypes } from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\nexport function Form({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StyledForm onSubmit={handleSubmit}>\r\n        <Label>\r\n          Имя\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Телефон\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </StyledForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactsList = styled.ul`\r\n  margin: 0;\r\n  padding: 24px;\r\n  list-style: none;\r\n`;\r\n\r\nexport const Contact = styled.li`\r\n  position: relative;\r\n  padding: 10px;\r\n  padding-left: 30px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  border: 1px gray solid;\r\n  border-radius: 10px;\r\n  box-shadow: rgb(25 26 27 / 20%) 1px 1px 1px 1px;\r\n  :not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const ContactInfo = styled.span`\r\n  margin-right: 56px;\r\n\r\n  svg {\r\n    position: absolute;\r\n    top: 15px;\r\n    left: 5px;\r\n    color: #010174;\r\n  }\r\n`;\r\n\r\nexport const DeleteBtn = styled.button`\r\n  display: block;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  border: 0.5px black solid;\r\n  &:hover {\r\n    background-color: tomato;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ContactInfo } from \"styles/Contacts.styled\";\r\nimport { Contact } from \"styles/Contacts.styled\";\r\nimport { DeleteBtn } from \"styles/Contacts.styled\";\r\nimport { ImAddressBook } from \"react-icons/im\";\r\nimport { ContactsList } from \"styles/Contacts.styled\";\r\n\r\nexport const Contacts = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      <h2>Contacts</h2>\r\n      <ContactsList>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <Contact key={id}>\r\n            <ContactInfo>\r\n              <ImAddressBook /> {name}: {number}\r\n            </ContactInfo>\r\n            <DeleteBtn onClick={() => onDeleteContact(id)} type=\"button\">\r\n              Delete\r\n            </DeleteBtn>\r\n          </Contact>\r\n        ))}\r\n      </ContactsList>\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MainContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 24px;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const Section = styled.div`\r\n  padding: 24px;\r\n`;\r\n","import { Input, Label } from \"styles/Form.styled\";\r\nimport React from \"react\";\r\nimport { Section } from \"styles/App.styled\";\r\n\r\nexport const Filter = ({ value, onFilterChange }) => (\r\n  <Section>\r\n    <Label>\r\n      Find contatcs by Name\r\n      <Input type=\"text\" value={value} onChange={onFilterChange} />\r\n    </Label>\r\n  </Section>\r\n);\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form } from \"components/Form/Form\";\r\nimport { Contacts } from \"components/Contacts/Contacts\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Filter } from \"components/Filter/Filter\";\r\nimport { MainContainer } from \"styles/App.styled\";\r\nimport { Title } from \"../../styles/App.styled\";\r\n\r\nexport function App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const addContact = (name, number) => {\r\n    const contact = { id: uuidv4(), name, number };\r\n\r\n    contacts.find((contact) => contact.name === name)\r\n      ? alert(`${contact.name} is already in contacts`)\r\n      : setContacts([contact, ...contacts]);\r\n  };\r\n\r\n  const handlerOnFilterChange = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const handlerOnDelteContact = (id) => {\r\n    setContacts(contacts.filter((contact) => contact.id !== id));\r\n  };\r\n\r\n  const getFilterContacts = () => {\r\n    const normalizedFilterValue = filter.toLowerCase().trim();\r\n\r\n    const filtredContacts = contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilterValue)\r\n    );\r\n    return filtredContacts;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n    if (contacts) {\r\n      setContacts(contacts);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const filterContacts = getFilterContacts();\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Title>Phonebook</Title>\r\n      <Form onSubmit={addContact} />\r\n      <Filter value={filter} onFilterChange={handlerOnFilterChange} />\r\n\r\n      <Contacts\r\n        contacts={filterContacts}\r\n        onDeleteContact={handlerOnDelteContact}\r\n      />\r\n    </MainContainer>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}